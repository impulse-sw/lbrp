project_name: lbrp
version: 4
langs:
  - rust
targets:
  - arch: x86_64
    os: linux
    os_derivative: any
    os_version:
      type: no
cache_files:
  - .git
  - Cargo.lock
  - target
  - lbrp-auth-frontend/dist
  - lbrp-cba-autovalidate/pkg
artifacts:
  - target/release/lbrp
  - lbrp-keyring.json
variables:
  - title: lbrp-adm-pass
    is_secret: true
    value:
      type: from_env_file
      env_file_path: .env
      key: LBRP_C3A_ADMP
  - title: lbrp-adm-kp
    is_secret: true
    value:
      type: from_env_file
      env_file_path: .env
      key: LBRP_C3A_ADMCDPUB
place_artifacts_into_project_root:
  - from: target/release/lbrp
    to: lbrp
  - from: lbrp-keyring.json
    to: ../lbrp-keyring.json
pipelines:
  - title: deploy
    desc: Got from `LBRP Pipeline`.
    info: lbrp@0.1.0
    tags:
      - cargo
      - upx
      - reqwest
    default: false
    actions:
      - title: Lint
        info: cargo-clippy@0.1.0
        tags:
          - cargo
          - clippy
        action:
          type: pre_build
          supported_langs:
            - rust
          commands:
            - bash_c: RUSTFLAGS='--cfg reqwest_unstable' cargo clippy
      - title: Format
        info: cargo-fmt@0.1.0
        tags:
          - rust
          - cargo
          - fmt
        requirements:
          - type: exists
            path: ~/.cargo/bin/leptosfmt
        exec_in_project_dir: true
        action:
          type: pre_build
          supported_langs:
            - rust
          commands:
            - bash_c: cd lbrp-auth-frontend && leptosfmt -t 2 ./**/*.rs
            - bash_c: cargo fmt -- --config tab_spaces=2,max_width=120 */**/*.rs
      - title: Compile LBRP Auth Frontend
        info: lbrp-auth-frontend@0.1.0
        tags:
          - rust
          - css
          - tailwind
          - trunk
        exec_in_project_dir: false
        action:
          type: build
          supported_langs:
            - rust
          commands:
            - bash_c: cd lbrp-auth-frontend && tailwindcss -i ./input.css -o ./public/tailwind.css --minify
            - bash_c: RUSTFLAGS='--cfg getrandom_backend="wasm_js" -Zlocation-detail=none' trunk build --release --config lbrp-auth-frontend/Trunk.toml
            - bash_c: wasm-opt -Oz --all-features -o {file} {file}
              placeholders:
                - "{file}"
              replacements:
                - group:
                    - from: "{file}"
                      to:
                        title: wasm-project-file
                        is_secret: false
                        value:
                          type: plain
                          value: lbrp-auth-frontend/dist/lbrp-auth-frontend_bg.wasm
      - title: Compile LBRP CBA Autovalidator
        info: lbrp-auth-frontend@0.1.0
        tags:
          - rust
          - css
          - tailwind
          - trunk
        exec_in_project_dir: false
        action:
          type: build
          supported_langs:
            - rust
          commands:
            - bash_c: mkdir -p target/wasm32-unknown-unknown/wasm
            - bash_c: ln -sfn "$(pwd)/target/wasm32-unknown-unknown/wasm" target/wasm32-unknown-unknown/debug
            - bash_c: cd lbrp-cba-autovalidate && RUSTFLAGS='--cfg getrandom_backend="wasm_js" -Zlocation-detail=none' wasm-pack build --dev --target web --profile wasm
            - bash_c: wasm-strip lbrp-cba-autovalidate/pkg/lbrp_cba_autovalidate_bg.wasm
            - bash_c: wasm-opt -Oz --all-features -o {file} {file}
              placeholders:
                - "{file}"
              replacements:
                - group:
                    - from: "{file}"
                      to:
                        title: wasm-project-file
                        is_secret: false
                        value:
                          type: plain
                          value: lbrp-cba-autovalidate/pkg/lbrp_cba_autovalidate_bg.wasm
      - title: Patch LBRP Auth Frontend
        info: patch-lbrp-auth-frontend@0.1.0
        tags: []
        action:
          type: patch
          patch: .depl/auth-frontend.json
      - title: Add dist files
        info: add-tailwind-css-to-dist-folder@0.1.0
        tags: []
        exec_in_project_dir: false
        action:
          type: post_build
          supported_langs:
            - rust
          commands:
            - bash_c: mkdir -p lbrp-auth-frontend/dist/--inner-lbrp-auth
            - bash_c: cp lbrp-auth-frontend/public/tailwind.css lbrp-auth-frontend/dist/--inner-lbrp-auth/tailwind.css
            - bash_c: mv lbrp-auth-frontend/dist/lbrp-auth-frontend.js lbrp-auth-frontend/dist/--inner-lbrp-auth/lbrp-auth-frontend.js
            - bash_c: mv lbrp-auth-frontend/dist/lbrp-auth-frontend_bg.wasm lbrp-auth-frontend/dist/--inner-lbrp-auth/lbrp-auth-frontend_bg.wasm
            - bash_c: mv lbrp-auth-frontend/dist/index.html lbrp-auth-frontend/dist/--inner-lbrp-auth/index.html
            - bash_c: mv lbrp-cba-autovalidate/pkg/lbrp_cba_autovalidate.js lbrp-auth-frontend/dist/--inner-lbrp-auth/lbrp_cba_autovalidate.js
            - bash_c: mv lbrp-cba-autovalidate/pkg/lbrp_cba_autovalidate_bg.wasm lbrp-auth-frontend/dist/--inner-lbrp-auth/lbrp_cba_autovalidate_bg.wasm
      - title: Build LBRP
        info: cargo-rel@0.1.0
        tags:
          - rust
          - cargo
        action:
          type: build
          supported_langs:
            - rust
          commands:
            - bash_c: RUSTFLAGS='--cfg reqwest_unstable -C target-cpu=native' cargo build --release
      - title: Compress LBRP
        info: upx-compress@0.1.0
        tags:
          - upx
        action:
          type: post_build
          supported_langs:
            - any
          commands:
            - bash_c: upx <af>
              placeholders:
                - <af>
              replacements:
                - group:
                    - from: <af>
                      to:
                        title: target/release/lbrp
                        is_secret: false
                        value:
                          type: plain
                          value: target/release/lbrp
      - title: Run LBRP
        info: run-lbrp@0.1.0
        tags:
          - lbrp
        exec_in_project_dir: false
        action:
          type: observe
          command:
            bash_c: sudo LBRP_C3A_ADMP='$1' LBRP_C3A_ADMCDPUB='$2' ./target/release/lbrp
            ignore_fails: true
            show_success_output: true
            show_bash_c: false
            placeholders:
              - $1
              - $2
            replacements:
              - group:
                  - from: $1
                    to:
                      title: lbrp-adm-pass
                      is_secret: true
                      value:
                        type: from_env_file
                        env_file_path: .env
                        key: LBRP_C3A_ADMP
                  - from: $2
                    to:
                      title: lbrp-adm-kp
                      is_secret: true
                      value:
                        type: from_env_file
                        env_file_path: .env
                        key: LBRP_C3A_ADMCDPUB
